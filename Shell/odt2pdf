#!/usr/bin/env bash

# Copyright 2021 Melwyn Francis Carlo <carlo.melwyn@outlook.com>

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#    http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


echo -ne "\n----------------------------------------"
echo  -e "----------------------------------------"

echo  -e " Odt2pdf - A script by Melwyn Francis Carlo"

echo -ne "----------------------------------------"
echo  -e "----------------------------------------\n"

hidden_odt_files_list=(`find . -iname '.*.odt' -o -iname '.*.odt#'`)

echo -ne " Deleting ${#hidden_odt_files_list[@]} hidden ODT files ... "

for hidden_odt_file in "${hidden_odt_files_list[@]}"
do
    rm -f "${hidden_odt_file}" &> /dev/null
done

hidden_odt_files_deleted=0

while [ $hidden_odt_files_deleted -eq 0 ]
do
    sleep 0.1

    hidden_odt_files_list=(`find . -iname '.*.odt' -o -iname '.*.odt#'`)

    if [ ${#hidden_odt_files_list[@]} -eq 0 ]
    then
        hidden_odt_files_deleted=1
    fi
done

echo  -e "Done!"

echo
odt_files_list=(`find . -type f -iname "*.odt"`)

echo -ne " Converting ${#odt_files_list[@]} ODT files to PDF ... "

for odt_file in "${odt_files_list[@]}"
do

    odt_file_dir_path="$(dirname "${odt_file}")"

    # Reference : https://stackoverflow.com/questions/30349542/command-libreoffice-headless-convert-to-pdf-test-docx-outdir-pdf-is-not

    soffice --headless --norestore "-env:UserInstallation=file:///tmp/LibreOffice_Conversion_${USER}" --convert-to pdf:writer_pdf_Export --outdir "$(dirname "${odt_file_dir_path}")" "${odt_file}" &> /dev/null

done

echo  -e " Done!\n"

echo -ne " Creating the PDF symbolic links ... "

if [ ! -d "${PWD}/PDF_Links" ]
then
    mkdir "${PWD}/PDF_Links" &> /dev/null
fi

rm -r "${PWD}/PDF_Links"/* &> /dev/null

for odt_file in "${odt_files_list[@]}"
do
    pdf_file_name="${odt_file}"

    pdf_file_name="${pdf_file_name/".odt"/".pdf"}"

    pdf_file_name="$(basename "${pdf_file_name}")"

    symbolic_file_path="$(dirname "${odt_file}")"

    symbolic_file_path="$(dirname "${symbolic_file_path}")"

    if [[ "${symbolic_file_path:0:1}" == "." ]]
    then
        symbolic_file_path="${symbolic_file_path:1}"
    fi

    if [[ "${symbolic_file_path:0:1}" == "/" ]]
    then
        symbolic_file_path="${symbolic_file_path:1}"
    fi

    odt_file_modified="${symbolic_file_path}"

    symbolic_file_path="${symbolic_file_path//\//"---"}"

    ln -s "${PWD}/${odt_file_modified}/${pdf_file_name}" \
          "${PWD}/PDF_Links/${symbolic_file_path}---${pdf_file_name}" &> /dev/null
done

echo  -e " Done!\n"

echo  -e " Odt2pdf process complete!\n\n"

exit 0

